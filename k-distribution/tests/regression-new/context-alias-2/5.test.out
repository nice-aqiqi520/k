  {
    Result
  #Equals
    <generatedTop>
      <k>
        qux ( 1 , 1 , 2 )
      </k>
      <state>
        x |-> 1
      </state>
    </generatedTop>
  }
#Or
  {
    Result
  #Equals
    <generatedTop>
      <k>
        qux ( 1 , 1 , 2 )
      </k>
      <state>
        x |-> 2
      </state>
    </generatedTop>
  }
#Or
  {
    Result
  #Equals
    <generatedTop>
      <k>
        qux ( 1 , 2 , 2 )
      </k>
      <state>
        x |-> 1
      </state>
    </generatedTop>
  }
#Or
  {
    Result
  #Equals
    <generatedTop>
      <k>
        qux ( 1 , 2 , 2 )
      </k>
      <state>
        x |-> 2
      </state>
    </generatedTop>
  }
#Or
  {
    Result
  #Equals
    <generatedTop>
      <k>
        r ( x ) ~> #freezerqux(_,_,_)_TEST_Exp_Exp_Exp_Exp1_ ( x = 1 , x = 2 )
      </k>
      <state>
        .Map
      </state>
    </generatedTop>
  }
